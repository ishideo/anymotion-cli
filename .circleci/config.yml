version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
  aws-cli: circleci/aws-cli@0.1.19

executors:
  python:
    parameters:
      version:
        type: string
        default: "3.8"
    docker:
      - image: circleci/python:<< parameters.version >>

commands:
  setup_python:
    parameters:
      version:
        type: string
        default: "3.8"
    steps:
      - restore_cache:
          keys:
            - deps-<< parameters.version >>-{{ checksum "poetry.lock" }}
      - run:
          name: Install python packages
          command: poetry install
      - save_cache:
          key: deps-<< parameters.version >>-{{ checksum "poetry.lock" }}
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs
  run_test:
    steps:
      - run:
          name: Run unit test with pytest
          command: |
            mkdir test-reports
            poetry run pytest -v --junitxml=test-reports/junit.xml
      - store_test_results:
          path: test-reports

jobs:
  setup-py38:
    executor:
      name: python
    steps:
      - checkout
      - setup_python

  test-py38:
    executor:
      name: python
    steps:
      - checkout
      - setup_python
      - run_test

  test-py37:
    executor:
      name: python
      version: "3.7"
    steps:
      - checkout
      - setup_python:
          version: "3.7"
      - run_test

  test-py36:
    executor:
      name: python
      version: "3.6"
    steps:
      - checkout
      - setup_python:
          version: "3.6"
      - run_test

  measure-coverage:
    executor:
      name: python
    steps:
      - checkout
      - setup_python
      - run:
          name: Run unit test with pytest
          command: poetry run pytest --cov --cov-report=xml
      - codecov/upload:
          flags: unittest

  check-syntax:
    executor:
      name: python
    steps:
      - checkout
      - setup_python
      - run:
          name: Lint with flake8
          command: poetry run flake8
      - run:
          name: Lint with black
          command: poetry run black . --check
      - run:
          name: Lint with mypy
          command: poetry run mypy

  check-security:
    executor:
      name: python
    steps:
      - checkout
      - setup_python
      - run:
          name: Check security with bandit
          command: poetry run bandit -r encore_api_cli -s B303

  build-and-upload:
    executor:
      name: python
    steps:
      - checkout
      - aws-cli/setup
      - run:
          name: Build
          command: poetry run build
      - run:
          name: Upload build file to S3
          command: |
            aws s3 sync dist s3://encore-api-cli
            aws s3 cp README.md s3://encore-api-cli
            aws s3 cp CHANGELOG.md s3://encore-api-cli
      - run:
          name: Notify slack
          command: |
            sed -e "s/<version>/${CIRCLE_TAG}/" .circleci/slack-message.json > message.json
            curl -X POST --data-urlencode payload@message.json ${SLACK_WEB_HOOK}

workflows:
  workflow:
    jobs:
      - setup-py38:
        filters:
          tags:
            only: /^\d.*/
      - test-py36:
          filters:
            tags:
              only: /^\d.*/
      - test-py37:
          filters:
            tags:
              only: /^\d.*/
      - test-py38:
          filters:
            tags:
              only: /^\d.*/
          requires:
            - setup-py38
      - measure-coverage:
          filters:
            tags:
              only: /^\d.*/
          requires:
            - test-py38
      - check-syntax:
          filters:
            tags:
              only: /^\d.*/
          requires:
            - setup-py38
      - check-security:
          filters:
            tags:
              only: /^\d.*/
          requires:
            - setup-py38
      - build-and-upload:
          filters:
            tags:
              only: /^\d.*/
            branches:
              ignore: /.*/
          requires:
            - test-py36
            - test-py37
            - test-py38
            - measure-coverage
            - check-syntax
            - check-security
